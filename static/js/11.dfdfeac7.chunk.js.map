{"version":3,"sources":["utils/forms/validateFields.js","shared/components/form-elements/input/input-styles.js","shared/components/form-elements/input/input.js","shared/components/form-elements/input/index.js","utils/trim.js","../node_modules/@material-ui/core/esm/Button/Button.js","redux/actions/sign-up-actions/sign-up-actions.js","authorization/components/sign-up/sign-up-styles.js","authorization/components/sign-up/sign-up.js","authorization/components/sign-up/index.js","authorization/containers/sign-up-container.js"],"names":["validateField","value","preValidators","validators","isValid","validatedValue","preValidator","length","validator","styles","theme","container","width","padding","color","textColor","fontFamily","defaultFontStack","inputItem","display","outline","border","background","defaultBgColor","borderRadius","transition","inputFocusColor","inputTextarea","height","resize","inputInvalid","errorMessage","margin","labelItem","fontWeight","textTransform","Input","props","label","classes","elementType","isTouched","errorMsg","config","onInput","element","className","clsx","onChange","defaultProps","withStyles","trim","str","res","arr","split","prev","shift","push","item","join","Button","React","ref","children","_props$color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","other","_objectWithoutProperties","concat","capitalize","ButtonBase","_extends","root","colorInherit","focusRipple","focusVisible","typography","button","boxSizing","minWidth","shape","palette","text","primary","transitions","create","duration","short","textDecoration","backgroundColor","fade","action","hoverOpacity","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","signUpSubmit","formData","dispatch","a","getAuthService","signUp","authData","signUpSuccess","signUpFailed","data","SIGNUP_SUCCESS","payload","signUpReset","SIGNUP_RESET","error","SIGNUP_FAILURE","signUpForm","formBorderColor","title","textAlign","submitButton","tips","linkContainer","link","SignUp","state","placeholder","isEmpty","matches","email","isEmail","password","toLowerCase","includes","isFormValid","componentDidUpdate","isRegistered","history","componentWillUnmount","onSubmitHandler","e","preventDefault","onSubmit","onChangeHandler","inputName","target","updatedFormElement","Object","entries","setState","render","hasError","formElements","key","id","map","isPassVisible","message","onClick","to","Component","SignUpContainer","connect","bindActionCreators"],"mappings":"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","file":"static/js/11.dfdfeac7.chunk.js","sourcesContent":["const validateField = (value, preValidators, validators) => {\r\n  let isValid = true;\r\n  let validatedValue = value;\r\n\r\n  if (preValidators) {\r\n    for (const preValidator of preValidators) {\r\n      validatedValue = preValidator(value);\r\n    }\r\n  }\r\n\r\n  if (validators.length === 0) {\r\n    return validatedValue;\r\n  }\r\n\r\n  for (const validator of validators) {\r\n    isValid = validator(validatedValue) && isValid;\r\n  }\r\n\r\n  if (preValidators) {\r\n    return [validatedValue, isValid];\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport default validateField;\r\n","const styles = theme => ({\r\n  container: {\r\n    width: '100%',\r\n    padding: '10px 0',\r\n    color: theme.textColor,\r\n    fontFamily: `Lato, ${theme.defaultFontStack}`\r\n  },\r\n  inputItem: {\r\n    width: '100%',\r\n    display: 'block',\r\n    padding: '7px 10px',\r\n    outline: 'none',\r\n    border: '1px solid #ccc',\r\n    background: theme.defaultBgColor,\r\n    fontFamily: 'inherit',\r\n    borderRadius: '5px',\r\n    color: theme.textColor,\r\n    transition: 'border-color 0.5s ease-in, background 0.5s ease-in',\r\n    '&:focus': {\r\n      background: theme.inputFocusColor\r\n    }\r\n  },\r\n  inputTextarea: {\r\n    height: '100px',\r\n    resize: 'none'\r\n  },\r\n  inputInvalid: {\r\n    border: '2px solid red'\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n    margin: '2px 0'\r\n  },\r\n  labelItem: {\r\n    fontWeight: 'bold',\r\n    display: 'block',\r\n    textTransform: 'capitalize',\r\n    fontFamily: 'inherit',\r\n    margin: '0 0 8px 0'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport styles from './input-styles';\r\nimport withStyles from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst Input = (props) => {\r\n  const {\r\n    label,\r\n    classes,\r\n    elementType,\r\n    value,\r\n    isValid,\r\n    isTouched,\r\n    errorMsg,\r\n    config,\r\n    onInput\r\n  } = props;\r\n\r\n  let element = null;\r\n  switch (elementType) {\r\n    case 'input':\r\n      element = <input\r\n        {...config}\r\n        className={clsx({\r\n          [classes.inputItem]: true,\r\n          [classes.inputInvalid]: !isValid && isTouched\r\n        })}\r\n        value={value}\r\n        onChange={onInput}\r\n      />;\r\n      break;\r\n    case 'textarea':\r\n      element = <textarea\r\n        {...config}\r\n        className={clsx({\r\n          [classes.inputItem]: true,\r\n          [classes.inputTextarea]: true,\r\n          [classes.inputInvalid]: !isValid && isTouched\r\n        })}\r\n        value={value}\r\n        onChange={onInput}\r\n      />;\r\n      break;\r\n    default:\r\n      element = <input\r\n        {...config}\r\n        className={clsx({\r\n          [classes.inputItem]: true,\r\n          [classes.inputInvalid]: !isValid && isTouched\r\n        })}\r\n        value={value}\r\n        onChange={onInput}\r\n      />;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <label className={classes.labelItem}>{label}</label>\r\n      {element}\r\n      {/* <VisibilityOutlinedIcon /> */}\r\n      {!isValid && isTouched && <p className={classes.errorMessage}>{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isValid: PropTypes.bool.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  elementType: PropTypes.string,\r\n  isTouched: PropTypes.bool.isRequired,\r\n  errorMsg: PropTypes.string,\r\n  config: PropTypes.object.isRequired,\r\n  onInput: PropTypes.func.isRequired\r\n};\r\n\r\nInput.defaultProps = {\r\n  errorMsg: 'Invalid input'\r\n};\r\n\r\nexport default withStyles(styles)(Input);\r\n","import Input from './input';\r\nexport default Input;\r\n","const trim = (str) => {\r\n  if (str.length <= 2) return str.trim();\r\n\r\n  const res = [];\r\n\r\n  const arr = str.trim().split('');\r\n  let prev = arr.shift();\r\n  if (prev !== ' ') res.push(prev);\r\n\r\n  for (const item of arr) {\r\n    if (prev !== ' ' || item !== ' ') { res.push(item); }\r\n    prev = item;\r\n  }\r\n\r\n  return res.join('');\r\n};\r\n\r\nexport default trim;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import getAuthService from '../../../services/auth-service';\r\nimport {\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_RESET\r\n} from './sign-up-actions-types';\r\n\r\nconst signUpSubmit = (formData) => async (dispatch) => {\r\n  try {\r\n    const authData = await getAuthService().signUp(formData);\r\n    dispatch(signUpSuccess(authData));\r\n  } catch (error) {\r\n    dispatch(signUpFailed(error));\r\n  }\r\n};\r\n\r\nconst signUpSuccess = (data) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nconst signUpReset = () => {\r\n  return {\r\n    type: SIGNUP_RESET\r\n  };\r\n};\r\n\r\nconst signUpFailed = (error) => {\r\n  return {\r\n    type: SIGNUP_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport {\r\n  signUpSubmit,\r\n  signUpReset\r\n};\r\n","const styles = theme => ({\r\n  container: {\r\n    width: '576px',\r\n    color: theme.textColor,\r\n    margin: '0 auto',\r\n    fontFamily: `Lato, ${theme.defaultFontStack}`\r\n  },\r\n  signUpForm: {\r\n    width: '100%',\r\n    border: `1px solid ${theme.formBorderColor}`,\r\n    backgroundColor: theme.defaultBgColor,\r\n    borderRadius: '5px',\r\n    padding: '20px',\r\n    margin: '50px 0'\r\n  },\r\n  title: {\r\n    fontFamily: 'inherit',\r\n    textAlign: 'center',\r\n    margin: '10px 0'\r\n  },\r\n  errorMessage: {\r\n    textAlign: 'center',\r\n    borderRadius: '10px',\r\n    backgroundColor: '#DC143C',\r\n    padding: '10px',\r\n    margin: '15px 0'\r\n  },\r\n  submitButton: {\r\n    width: '100%'\r\n  },\r\n  tips: {\r\n    fontFamily: 'inherit',\r\n    textAlign: 'center',\r\n    color: '#5F7D95'\r\n  },\r\n  linkContainer: {\r\n    display: 'block',\r\n    padding: '10px 0'\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    fontFamily: 'inherit',\r\n    color: '#1273eb'\r\n  },\r\n  '@media (max-width: 768px)': {\r\n    container: {\r\n      width: '80vw'\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport styles from './sign-up-styles';\r\nimport withStyles from 'react-jss';\r\nimport Input from '../../../shared/components/form-elements/input';\r\nimport { isEmail, isEmpty, matches } from 'validator';\r\nimport trim from '../../../utils/trim';\r\nimport validateField from '../../../utils/forms/validateFields';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    formData: {\r\n      name: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'text',\r\n          placeholder: 'Your name'\r\n        },\r\n        preValidators: [\r\n          (str) => trim(str)\r\n        ],\r\n        validators: [\r\n          (str) => !isEmpty(str),\r\n          (str) => matches(str, /^[a-zA-z ,.'-]+$/)\r\n        ],\r\n        isValid: false,\r\n        isTouched: false,\r\n        errorMsg: 'Please provide a valid name',\r\n        value: ''\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'text',\r\n          placeholder: 'Email address'\r\n        },\r\n        preValidators: [],\r\n        validators: [\r\n          (str) => !isEmpty(str),\r\n          (str) => isEmail(str)\r\n        ],\r\n        isValid: false,\r\n        isTouched: false,\r\n        errorMsg: 'Please provide a valid email',\r\n        value: ''\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'password',\r\n          placeholder: 'Password (min 8 characters)'\r\n        },\r\n        preValidators: [],\r\n        validators: [\r\n          (str) => !isEmpty(str),\r\n          (str) => str.length >= 8,\r\n          (str) => !str.toLowerCase().includes('password')\r\n        ],\r\n        // isPassVisible: true,\r\n        isValid: false,\r\n        isTouched: false,\r\n        errorMsg: 'Password cannot contain \"password\" string and min length is 8',\r\n        value: ''\r\n      }\r\n    },\r\n    isFormValid: false\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.isRegistered) {\r\n      this.props.history.push('/signin');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.signUpReset();\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.isFormValid) {\r\n      const formData = {\r\n        name: this.state.formData.name.value,\r\n        email: this.state.formData.email.value,\r\n        password: this.state.formData.password.value\r\n      };\r\n      this.props.onSubmit(formData);\r\n    }\r\n  }\r\n\r\n  onChangeHandler = (e, inputName) => {\r\n    const value = e.target.value;\r\n    const preValidators = this.state.formData[inputName].preValidators;\r\n    const validators = this.state.formData[inputName].validators;\r\n    const [validatedValue, isValid] = validateField(value, preValidators, validators);\r\n    const formData = { ...this.state.formData };\r\n    const updatedFormElement = formData[inputName] = {\r\n      ...formData[inputName],\r\n      isValid,\r\n      value: validatedValue || value,\r\n      isTouched: true\r\n    };\r\n    formData[inputName] = updatedFormElement;\r\n\r\n    let isFormValid = true;\r\n    for (const [, data] of Object.entries(formData)) {\r\n      isFormValid = data.isValid && isFormValid;\r\n    }\r\n    this.setState({\r\n      formData,\r\n      isFormValid\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { classes, hasError } = this.props;\r\n    const formElements = [];\r\n    for (const [key, data] of Object.entries(this.state.formData)) {\r\n      formElements.push({\r\n        id: key,\r\n        elementType: data.elementType,\r\n        config: data.config,\r\n        value: data.value,\r\n        isValid: data.isValid,\r\n        isTouched: data.isTouched,\r\n        errorMsg: data.errorMsg\r\n      });\r\n    }\r\n    return (\r\n      <div className={classes.container}>\r\n        <form className={classes.signUpForm} onSubmit={this.onSubmitHandler}>\r\n          <h1 className={classes.title}>Sign up</h1>\r\n          {formElements.map(item => {\r\n            return (\r\n              <Input\r\n                label={item.id}\r\n                key={item.id}\r\n                elementType={item.elementType}\r\n                config={item.config}\r\n                value={item.value}\r\n                isValid={item.isValid}\r\n                isTouched={item.isTouched}\r\n                errorMsg={item.errorMsg}\r\n                isPassVisible={item.isPassVisible}\r\n                // onIconClick={(e) => this.onIconClickHandler(e, item.id)}\r\n                onInput={(e) => this.onChangeHandler(e, item.id) }\r\n              />\r\n            );\r\n          })}\r\n          <p className={classes.tips}>Your password must be at least 8 characters long and cannot contain word &quot;password&quot;.</p>\r\n          {hasError && <div className={classes.errorMessage}>\r\n            {hasError.message}\r\n          </div>}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submitButton}\r\n            onClick={this.onSubmitHandler}\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n          <span className={classes.linkContainer}>\r\n            <Link\r\n              to=\"/signin\"\r\n              className={classes.link}>\r\n              Already registered? Sign in\r\n            </Link>\r\n          </span>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  signUpReset: PropTypes.func.isRequired,\r\n  hasError: PropTypes.object,\r\n  isRegistered: PropTypes.bool.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SignUp);\r\n","import SignUp from './sign-up';\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { signUpSubmit, signUpReset } from '../../redux/actions/sign-up-actions/sign-up-actions';\r\nimport SignUp from '../components/sign-up';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SignUpContainer extends Component {\r\n  render = () => {\r\n    const { hasError, isRegistered, signUpSubmit, history, signUpReset } = this.props;\r\n    return (\r\n      <SignUp\r\n        hasError={hasError}\r\n        isRegistered={isRegistered}\r\n        signUpReset={signUpReset}\r\n        onSubmit={signUpSubmit}\r\n        history={history}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  signUp: { hasError, isRegistered }\r\n}) => {\r\n  return {\r\n    hasError,\r\n    isRegistered\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    signUpSubmit,\r\n    signUpReset\r\n  }, dispatch);\r\n};\r\n\r\nSignUpContainer.propTypes = {\r\n  isRegistered: PropTypes.bool.isRequired,\r\n  signUpSubmit: PropTypes.func.isRequired,\r\n  signUpReset: PropTypes.func.isRequired,\r\n  hasError: PropTypes.object,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer);\r\n"],"sourceRoot":""}