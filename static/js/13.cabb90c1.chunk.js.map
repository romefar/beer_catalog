{"version":3,"sources":["shared/components/ui-elements/card/card-styles.js","shared/components/ui-elements/card/card.js","shared/components/ui-elements/card/index.js","shared/components/ui-elements/message-box/message-box-styles.js","shared/components/ui-elements/message-box/message-box.js","shared/components/ui-elements/message-box/index.js","utils/isBeerFavourite.js","utils/resize-controller.js","services/beer-service.js","utils/trim.js","redux/actions/beer-suggestions-actions/beer-suggestions-actions.js","suggestions/components/beer-suggestions-item/beer-suggestions-item-styles.js","suggestions/components/beer-suggestions-item/index.js","suggestions/components/beer-suggestions-item/beer-suggestions-item.js","suggestions/components/beer-suggestions-list/beer-suggestions-list-styles.js","suggestions/components/beer-suggestions-list/index.js","suggestions/components/beer-suggestions-list/beer-suggestions-list.js","suggestions/components/beer-suggest-input/beer-suggest-input-styles.js","suggestions/components/beer-suggest-input/beer-suggest-input.js","suggestions/components/beer-suggest-input/index.js","suggestions/containers/beer-suggestions-container.js"],"names":["styles","theme","card","margin","boxShadow","borderRadius","padding","overflow","background","defaultBgColor","border","transition","Card","classes","className","children","clsx","defaultProps","withStyles","header","fontFamily","defaultFontStack","container","width","maxWidth","textAlign","color","MessageBox","text","isFavourite","id","favourites","map","item","beerId","includes","ResizeController","getItemsCount","document","querySelector","containerWidth","window","innerWidth","containerHeight","innerHeight","offsetHeight","elememtsInRow","Math","floor","rowsCount","rowsHeight","BeerService","per_page","page","beer_name","abv_gt","ibu_gt","ebc_gt","resetPages","getFavouritesBeerItems","a","fetch","options","searchQuery","alcoholVolume","bitternetsUnits","ebcColor","isChanged","isEqual","url","Object","entries","key","value","split","join","push","beerData","data","image_url","fetchBeerSuggestions","fetchBeerSuggestionsByYeast","yeast","yeastURI","toLowerCase","fetchBeerItems","beerItems","fetchSingleBeer","beerItem","shift","getBeerService","instance","trim","str","length","res","arr","prev","fetchBeerItemsRequest","type","FETCH_BEER_SUGGESTIONS_REQUEST","fetchBeerItemsSuccess","FETCH_BEER_SUGGESTIONS_SUCCESS","payload","fetchBeerItemsFailure","error","FETCH_BEER_SUGGESTIONS_FAILURE","dispatch","imageContainer","height","marginBottom","objectFit","deletedTitle","info","title","tagline","fontStyle","actions","borderTop","display","buttonTextColor","description","cardContent","BeerSuggestionsItem","imageUrl","name","onFavouriteClick","isBeerFavourite","Button","component","RouterLink","to","onClick","src","alt","textColor","flexDirection","paginationContainer","justifyContent","backgroundColor","pageItemSelectedColor","pageItemHoveredColor","BeerSuggestionsList","isLoading","hasError","items","paginationElement","isSuggestAvailable","isYeastSuggestion","isEmpty","message","svgIconsColor","searchInput","inputFocusColor","searchForm","alignItems","beerTypes","BeerSuggestInput","onInputChange","onSubmit","Autocomplete","freeSolo","option","size","renderInput","params","TextField","label","placeholder","variant","IconButton","BeerSuggestionsContainer","state","searchTerm","toggleFavourites","props","removeBeerFromFavourites","addBeerToFavourites","componentDidMount","componentDidUpdate","prevProps","prevState","onSubmitHandler","e","preventDefault","setState","onInputChangeHandler","onPageChange","render","pages","Pagination","count","onChange","PureComponent","connect","beerSuggestions","profile","bindActionCreators"],"mappings":"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","file":"static/js/13.cabb90c1.chunk.js","sourcesContent":["const styles = theme => ({\r\n  card: {\r\n    margin: 0,\r\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.26)',\r\n    borderRadius: '6px',\r\n    padding: '1rem',\r\n    overflow: 'hidden',\r\n    background: theme.defaultBgColor,\r\n    border: '1px solid transparent',\r\n    transition: 'background-color 0.5s ease-in'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport withStyles from 'react-jss';\r\nimport styles from './card-styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst Card = ({ classes, className, children }) => {\r\n  return (\r\n    <div className={clsx(classes.card, className)}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.any\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: {}\r\n};\r\n\r\nexport default withStyles(styles)(Card);\r\n","import Card from './card';\r\nexport default Card;\r\n","const styles = theme => ({\r\n  header: {\r\n    fontFamily: `Helvetica, ${theme.defaultFontStack}`,\r\n    margin: '10px 0'\r\n  },\r\n  container: {\r\n    width: '40vw',\r\n    maxWidth: '768px',\r\n    margin: '20px auto',\r\n    textAlign: 'center',\r\n    '& a': {\r\n      fontFamily: `Helvetica, ${theme.defaultFontStack}`,\r\n      color: '#696969'\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport Card from '../card';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from 'react-jss';\r\nimport styles from './message-box-styles';\r\n\r\nconst MessageBox = ({ text, children, classes }) => {\r\n  return (\r\n    <Card className={classes.container}>\r\n      <h2 className={classes.header}>{text}</h2>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nMessageBox.propTypes = {\r\n  text: PropTypes.string,\r\n  children: PropTypes.any,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nMessageBox.defaultProps = {\r\n  text: 'Nothing to show here.'\r\n};\r\n\r\nexport default withStyles(styles)(MessageBox);\r\n","import MessageBox from './message-box';\r\nexport default MessageBox;\r\n","export const isFavourite = (id, favourites) => {\r\n  return favourites.map(item => item.beerId).includes(id);\r\n};\r\n","class ResizeController {\r\n  static getItemsCount = () => {\r\n    // TODO: Fix selectors names or replace with id\r\n    // const container = document.querySelector('#beer_list_container');\r\n    const header = document.querySelector('#main_header');\r\n\r\n    const containerWidth = window.innerWidth * 0.75;\r\n    const containerHeight = window.innerHeight -\r\n                            header.offsetHeight;\r\n    const cardWidth = 320;\r\n    const cardHeight = 353;\r\n\r\n    const elememtsInRow = Math.floor(containerWidth / cardWidth);\r\n    let rowsCount = 0;\r\n    let rowsHeight = 0;\r\n    while (rowsHeight < containerHeight) {\r\n      rowsHeight += cardHeight;\r\n      rowsCount++;\r\n    }\r\n    const itemsCount = elememtsInRow * rowsCount;\r\n    return itemsCount;\r\n  }\r\n}\r\n\r\nexport default ResizeController;\r\n","import fetch from '../utils/fetch';\r\nimport ResizeController from '../utils/resize-controller';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nclass BeerService {\r\n  #beerRoute = '/api/v1/beers';\r\n  #prevOptions = null;\r\n  #params = {\r\n    per_page: 12,\r\n    page: 1,\r\n    beer_name: null,\r\n    abv_gt: null,\r\n    ibu_gt: null,\r\n    ebc_gt: null\r\n  }\r\n  // TODO: move image replacer to server!\r\n\r\n  #defaultImageUrl = 'http://pluspng.com/img-png/beer-bottle-png-hd-a-beer-bottle-beer-bottle-brown-foam-free-png-and-psd-650.jpg';\r\n\r\n  resetPages = () => {\r\n    this.#params.page = 1;\r\n  }\r\n\r\n  getFavouritesBeerItems = async (page) => {\r\n    return await fetch(`${this.#beerRoute}/favourites?page=${page}`);\r\n  }\r\n\r\n  #configureRequest = (options) => {\r\n    const {\r\n      searchQuery,\r\n      alcoholVolume,\r\n      bitternetsUnits,\r\n      ebcColor\r\n    } = options;\r\n    this.#params.per_page = ResizeController.getItemsCount();\r\n    const isChanged = isEqual(this.#prevOptions, options);\r\n    this.#params.page = isChanged ? this.#params.page : 1;\r\n    this.#params = {\r\n      ...this.#params,\r\n      beer_name: searchQuery,\r\n      abv_gt: alcoholVolume,\r\n      ibu_gt: bitternetsUnits,\r\n      ebc_gt: ebcColor\r\n    };\r\n    this.#prevOptions = options;\r\n  }\r\n\r\n  #generateUrl = () => {\r\n    const url = [];\r\n    for (let [key, value] of Object.entries(this.#params)) {\r\n      if (value) {\r\n        if (key === 'beer_name') {\r\n          key = key.split(' ').join('_');\r\n        }\r\n        url.push(`${key}=${value}`);\r\n      }\r\n    }\r\n    return `?${url.join('&')}`;\r\n  }\r\n\r\n  #replaceEmptyImages = (beerData) => {\r\n    const fixeditems = beerData.map(item => {\r\n      if (!item.image_url) {\r\n        item.image_url = this.#defaultImageUrl;\r\n      }\r\n      return item;\r\n    });\r\n    return {\r\n      data: fixeditems\r\n    };\r\n  }\r\n\r\n  fetchBeerSuggestions = async (page) => {\r\n    return await fetch(`${this.#beerRoute}/suggestions?page=${page}`);\r\n  }\r\n\r\n  fetchBeerSuggestionsByYeast = async (page, yeast) => {\r\n    const yeastURI = yeast.toLowerCase().split(' ').join('_');\r\n    return await fetch(`${this.#beerRoute}/suggestions?page=${page}&yeast=${yeastURI}`);\r\n  }\r\n\r\n  fetchBeerItems = async (options) => {\r\n    this.#configureRequest(options);\r\n    const url = this.#generateUrl();\r\n    const beerData = await fetch(`${this.#beerRoute}${url}`);\r\n    const beerItems = this.#replaceEmptyImages(beerData);\r\n    this.#params.page += 1;\r\n    return beerItems;\r\n  }\r\n\r\n  fetchSingleBeer = async (options) => {\r\n    const { id } = options;\r\n    const beerData = await fetch(`${this.#beerRoute}/${id}`);\r\n    const beerItem = this.#replaceEmptyImages(beerData);\r\n    return beerItem.data.shift();\r\n  }\r\n}\r\n\r\nconst getBeerService = (() => {\r\n  let instance = null;\r\n  return () => {\r\n    if (instance) {\r\n      return instance;\r\n    } else {\r\n      instance = new BeerService();\r\n      return instance;\r\n    }\r\n  };\r\n})();\r\n\r\nexport default getBeerService;\r\n","const trim = (str) => {\r\n  if (str.length <= 2) return str.trim();\r\n\r\n  const res = [];\r\n\r\n  const arr = str.trim().split('');\r\n  let prev = arr.shift();\r\n  if (prev !== ' ') res.push(prev);\r\n\r\n  for (const item of arr) {\r\n    if (prev !== ' ' || item !== ' ') { res.push(item); }\r\n    prev = item;\r\n  }\r\n\r\n  return res.join('');\r\n};\r\n\r\nexport default trim;\r\n","import getBeerService from '../../../services/beer-service';\r\nimport {\r\n  FETCH_BEER_SUGGESTIONS_REQUEST,\r\n  FETCH_BEER_SUGGESTIONS_SUCCESS,\r\n  FETCH_BEER_SUGGESTIONS_FAILURE\r\n} from './beer-suggestions-actions-types';\r\n\r\nconst fetchBeerItemsRequest = () => {\r\n  return {\r\n    type: FETCH_BEER_SUGGESTIONS_REQUEST\r\n  };\r\n};\r\n\r\nconst fetchBeerItemsSuccess = (beerItems) => {\r\n  return {\r\n    type: FETCH_BEER_SUGGESTIONS_SUCCESS,\r\n    payload: beerItems\r\n  };\r\n};\r\n\r\nconst fetchBeerItemsFailure = (error) => {\r\n  return {\r\n    type: FETCH_BEER_SUGGESTIONS_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst fetchBeerSuggestions = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchBeerItemsRequest());\r\n    const beerItems = await getBeerService().fetchBeerSuggestions(page);\r\n    dispatch(fetchBeerItemsSuccess(beerItems));\r\n  } catch (error) {\r\n    dispatch(fetchBeerItemsFailure(error));\r\n  }\r\n};\r\n\r\nconst fetchBeerSuggestionsByYeast = (page, yeast) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchBeerItemsRequest());\r\n    const beerItems = await getBeerService().fetchBeerSuggestionsByYeast(page, yeast);\r\n    dispatch(fetchBeerItemsSuccess(beerItems));\r\n  } catch (error) {\r\n    dispatch(fetchBeerItemsFailure(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  fetchBeerSuggestions,\r\n  fetchBeerSuggestionsByYeast\r\n};\r\n","const styles = theme => ({\r\n  imageContainer: {\r\n    width: '15%',\r\n    height: '200px',\r\n    marginBottom: '10px',\r\n    '& img': {\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: 'contain'\r\n    }\r\n  },\r\n  deletedTitle: {\r\n    margin: '50px auto',\r\n    fontFamily: `Helvetica, ${theme.defaultFontStack}`\r\n  },\r\n  info: {\r\n    textAlign: 'justify',\r\n    width: '85%'\r\n  },\r\n  title: {\r\n    margin: '3px 0',\r\n    fontFamily: `Helvetica, ${theme.defaultFontStack}`\r\n  },\r\n  tagline: {\r\n    margin: '0 0 9px 0',\r\n    color: '#808080',\r\n    fontFamily: `Lato, ${theme.defaultFontStack}`,\r\n    fontStyle: 'italic'\r\n  },\r\n  actions: {\r\n    borderTop: '1px solid #ccc',\r\n    display: 'flex',\r\n    padding: '5px 0 0 0',\r\n    '& span': {\r\n      color: theme.buttonTextColor\r\n    }\r\n  },\r\n  description: {\r\n    margin: '10px 0',\r\n    color: '#696969',\r\n    fontFamily: `Lato, ${theme.defaultFontStack}`\r\n  },\r\n  cardContent: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    marginBottom: '20px',\r\n    transition: 'all 0.5s ease-in'\r\n  },\r\n  '@media (max-width: 768px)': {\r\n    info: {\r\n      width: '70%'\r\n    },\r\n    imageContainer: {\r\n      width: '30%'\r\n    }\r\n  },\r\n  '@media (max-width: 380px)': {\r\n    imageContainer: {\r\n      display: 'none'\r\n    },\r\n    info: {\r\n      width: '100%'\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import BeerSuggestionsItem from './beer-suggestions-item';\r\nexport default BeerSuggestionsItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../../../shared/components/ui-elements/card';\r\nimport styles from './beer-suggestions-item-styles';\r\nimport withStyles from 'react-jss';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { isFavourite as isBeerFavourite } from '../../../utils/isBeerFavourite';\r\n\r\nconst BeerSuggestionsItem = ({ id, classes, imageUrl, name, tagline, description, favourites, onFavouriteClick }) => {\r\n  const isFavourite = isBeerFavourite(id, favourites);\r\n  return (\r\n    <Card className={classes.cardContent}>\r\n      <div className={classes.info}>\r\n        <h1 className={classes.title} title={name}>{name}</h1>\r\n        <p className={classes.tagline}>{tagline}</p>\r\n        <p className={classes.description}>{description}</p>\r\n        <div className={classes.actions}>\r\n          <Button component={RouterLink} to={`/beer/${id}`}>View</Button>\r\n          <Button onClick={() => onFavouriteClick(id)}>\r\n            {isFavourite ? 'Remove from favourite' : 'Add to favourite'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.imageContainer}>\r\n        <img src={imageUrl} alt={name} title={name}/>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBeerSuggestionsItem.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tagline: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  favourites: PropTypes.array.isRequired,\r\n  onFavouriteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BeerSuggestionsItem);\r\n","const styles = theme => ({\r\n  container: {\r\n    width: '60vw',\r\n    maxWidth: '1200px',\r\n    margin: '20px auto',\r\n    color: theme.textColor,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: `Verdana, ${theme.defaultFontStack}`,\r\n    '& h3': {\r\n      textAlign: 'center',\r\n      margin: '0 0 15px 0'\r\n    }\r\n  },\r\n  paginationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& li button': {\r\n      color: theme.textColor\r\n    },\r\n    '& li button.Mui-selected': {\r\n      backgroundColor: theme.pageItemSelectedColor\r\n    },\r\n    '& li button.MuiPaginationItem-page:hover': {\r\n      backgroundColor: theme.pageItemHoveredColor\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import BeerSuggestionsList from './beer-suggestions-list';\r\nexport default BeerSuggestionsList;\r\n","import React from 'react';\r\nimport BeerSuggestionsItem from '../beer-suggestions-item';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from 'react-jss';\r\nimport styles from './beer-suggestions-list-styles';\r\nimport LoadingSpinner from '../../../shared/components/ui-elements/loading-spinner';\r\nimport MessageBox from '../../../shared/components/ui-elements/message-box';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BeerSuggestionsList = ({\r\n  classes, isLoading, hasError, items, favourites,\r\n  onFavouriteClick, paginationElement, isSuggestAvailable,\r\n  isYeastSuggestion, isEmpty\r\n}) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      {isLoading && <LoadingSpinner />}\r\n      {hasError && <MessageBox text={hasError.message} />}\r\n      {isSuggestAvailable && <h3>Beer suggestions based on your favourites</h3>}\r\n      {items.length > 0 && !isLoading && items.map(beerItem => {\r\n        return (\r\n          <BeerSuggestionsItem\r\n            id={beerItem.id}\r\n            key={beerItem.id}\r\n            favourites={favourites}\r\n            onFavouriteClick={onFavouriteClick}\r\n            description={beerItem.description}\r\n            imageUrl={beerItem.image_url}\r\n            name={beerItem.name}\r\n            tagline={beerItem.tagline}\r\n          />\r\n        );\r\n      })}\r\n      {!isSuggestAvailable && !isYeastSuggestion && !isLoading &&\r\n        <MessageBox text=\"We don't have enough data to suggest you beer. Add some beer to favourites to view suggestions.\">\r\n          <Link to=\"/\">\r\n            Disover new beer.\r\n          </Link>\r\n        </MessageBox>}\r\n      {isEmpty && isYeastSuggestion && <MessageBox text=\"We didn't find anything. Try different yeast name.\" />}\r\n      <div className={classes.paginationContainer}>\r\n        {items.length > 0 && paginationElement}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBeerSuggestionsList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isSuggestAvailable: PropTypes.bool.isRequired,\r\n  hasError: PropTypes.object,\r\n  items: PropTypes.array.isRequired,\r\n  isYeastSuggestion: PropTypes.bool.isRequired,\r\n  isEmpty: PropTypes.bool.isRequired,\r\n  favourites: PropTypes.array.isRequired,\r\n  onFavouriteClick: PropTypes.func.isRequired,\r\n  paginationElement: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BeerSuggestionsList);\r\n","const styles = theme => ({\r\n  container: {\r\n    width: '50vw',\r\n    maxWidth: '960px',\r\n    color: theme.textColor,\r\n    margin: '20px auto',\r\n    fontFamily: `Verdana, ${theme.defaultFontStack}`,\r\n    '& svg': {\r\n      color: theme.svgIconsColor\r\n    },\r\n    '& h2': {\r\n      textAlign: 'center',\r\n      margin: '0 0 10px 0'\r\n    }\r\n  },\r\n  searchInput: {\r\n    width: '100%',\r\n    '& div div.MuiInputBase-root': {\r\n      transition: 'background-color 0.5s ease-in',\r\n      background: theme.inputFocusColor\r\n    },\r\n    '& input': {\r\n      color: theme.textColor\r\n    }\r\n  },\r\n  searchForm: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  '@media (max-width: 910px)': {\r\n    container: {\r\n      width: '70vw'\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from 'react-jss';\r\nimport styles from './beer-suggest-input-styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst beerTypes = [\r\n  { title: 'American Ale' },\r\n  { title: 'Pilsen Lager' },\r\n  { title: 'French Saison' },\r\n  { title: 'Belgian Ardennes' },\r\n  { title: 'German Wheat' },\r\n  { title: 'Bavarian Wheat' },\r\n  { title: 'Monastery Ale' },\r\n  { title: 'American Wheat' },\r\n  { title: 'Super High Gravity Ale' },\r\n  { title: 'Trappist High Gravity' },\r\n  { title: 'Belgian Witbier' },\r\n  { title: 'Belgian Saison' },\r\n  { title: 'Belgian Strong Ale' },\r\n  { title: 'Bohemian Lager' },\r\n  { title: 'Vermont Ale' },\r\n  { title: 'Bohemian Lager' },\r\n  { title: 'London Ale Saflager' }\r\n];\r\n\r\nconst BeerSuggestInput = ({ classes, value, onInputChange, onSubmit }) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <h2>Let us know your yeast preferences</h2>\r\n      <form className={classes.searchForm} onSubmit={onSubmit}>\r\n        <Autocomplete\r\n          id=\"free-solo-demo\"\r\n          freeSolo\r\n          className={classes.searchInput}\r\n          options={beerTypes.map((option) => option.title)}\r\n          size=\"small\"\r\n          value={value}\r\n          onInputChange={onInputChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search by yeast\"\r\n              placeholder=\"Input yeast name...\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\" />\r\n          )}\r\n        />\r\n        <IconButton onClick={onSubmit}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nBeerSuggestInput.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BeerSuggestInput);\r\n","import BeerSuggestInput from './beer-suggest-input';\r\nexport default BeerSuggestInput;\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchBeerSuggestions, fetchBeerSuggestionsByYeast } from '../../redux/actions/beer-suggestions-actions/beer-suggestions-actions';\r\nimport { addBeerToFavourites, removeBeerFromFavourites } from '../../redux/actions/profile-actions/profile-actions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport BeerSuggestionsList from '../components/beer-suggestions-list';\r\nimport PropTypes from 'prop-types';\r\nimport BeerSuggestInput from '../components/beer-suggest-input';\r\nimport trim from '../../utils/trim';\r\n\r\nclass BeerSuggestionsContainer extends PureComponent {\r\n  state = {\r\n    page: 1,\r\n    searchTerm: ''\r\n  }\r\n\r\n  toggleFavourites = (id) => {\r\n    if (this.props.favourites.map(item => item.beerId).includes(id)) {\r\n      this.props.removeBeerFromFavourites(id);\r\n    } else {\r\n      this.props.addBeerToFavourites(id);\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBeerSuggestions(this.state.page);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.state.page !== prevState.page && !this.props.isYeastSuggestion) {\r\n      this.props.fetchBeerSuggestions(this.state.page);\r\n    } else if (this.state.page !== prevState.page && this.props.isYeastSuggestion) {\r\n      this.props.fetchBeerSuggestionsByYeast(this.state.page, this.state.searchTerm);\r\n    }\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const searchTerm = trim(this.state.searchTerm);\r\n    if (searchTerm) {\r\n      this.setState({\r\n        page: 1\r\n      });\r\n      this.props.fetchBeerSuggestionsByYeast(this.state.page, searchTerm);\r\n    } else {\r\n      this.setState({\r\n        page: 1\r\n      });\r\n      this.props.fetchBeerSuggestions(this.state.page);\r\n    }\r\n  }\r\n\r\n  onInputChangeHandler = (e, value) => {\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  }\r\n\r\n  onPageChange = (e, page) => {\r\n    this.setState({\r\n      page\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const {\r\n      items, hasError, favourites, isSuggestAvailable,\r\n      isEmpty, isYeastSuggestion, isLoading, pages\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <BeerSuggestInput\r\n          value={this.state.searchTerm}\r\n          onInputChange={this.onInputChangeHandler}\r\n          onSubmit={this.onSubmitHandler}\r\n        />\r\n        <BeerSuggestionsList\r\n          items={items}\r\n          hasError={hasError}\r\n          onFavouriteClick={this.toggleFavourites}\r\n          favourites={favourites}\r\n          isLoading={isLoading}\r\n          isSuggestAvailable={isSuggestAvailable}\r\n          isYeastSuggestion={isYeastSuggestion}\r\n          isEmpty={isEmpty}\r\n          paginationElement={\r\n            <Pagination count={pages} page={this.state.page} onChange={this.onPageChange}/>\r\n          }\r\n        />\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  beerSuggestions: { isLoading, hasError, isSuggestAvailable, isYeastSuggestion, isEmpty, items, pages },\r\n  profile: { favourites }\r\n}) => {\r\n  return {\r\n    isLoading,\r\n    hasError,\r\n    isSuggestAvailable,\r\n    isEmpty,\r\n    isYeastSuggestion,\r\n    items,\r\n    pages,\r\n    favourites\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    fetchBeerSuggestions,\r\n    addBeerToFavourites,\r\n    fetchBeerSuggestionsByYeast,\r\n    removeBeerFromFavourites\r\n  }, dispatch);\r\n};\r\n\r\nBeerSuggestionsContainer.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  hasError: PropTypes.object,\r\n  isSuggestAvailable: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isYeastSuggestion: PropTypes.bool.isRequired,\r\n  isEmpty: PropTypes.bool.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  favourites: PropTypes.array.isRequired,\r\n  fetchBeerSuggestions: PropTypes.func.isRequired,\r\n  removeBeerFromFavourites: PropTypes.func.isRequired,\r\n  addBeerToFavourites: PropTypes.func.isRequired,\r\n  fetchBeerSuggestionsByYeast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BeerSuggestionsContainer);\r\n"],"sourceRoot":""}